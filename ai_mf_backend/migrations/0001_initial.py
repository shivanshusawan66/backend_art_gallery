# Generated by Django 5.1.2 on 2024-10-23 07:01

import ai_mf_backend.models.v1.database.user
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Allowed_Response",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("response", models.CharField(max_length=500)),
                ("add_date", models.DateTimeField(auto_now_add=True)),
                ("update_date", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Allowed Response",
                "verbose_name_plural": "Allowed Response",
                "db_table": "allowed_response",
            },
        ),
        migrations.CreateModel(
            name="AMFIMutualFund",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("scheme_name", models.CharField(max_length=255, unique=True)),
                ("q_param", models.CharField(max_length=255)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="AnnualIncome",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("income_category", models.CharField(max_length=100, unique=True)),
                ("add_date", models.DateTimeField(auto_now_add=True)),
                ("update_date", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Annual Income",
                "verbose_name_plural": "Annual Income",
                "db_table": "annual_income",
            },
        ),
        migrations.CreateModel(
            name="Gender",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("gender", models.CharField(max_length=50, unique=True)),
                ("add_date", models.DateTimeField(auto_now_add=True)),
                ("update_date", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Gender",
                "verbose_name_plural": "Gender",
                "db_table": "gender",
            },
        ),
        migrations.CreateModel(
            name="InvestmentAmountPerYear",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "investment_amount_per_year",
                    models.CharField(max_length=100, unique=True),
                ),
                ("add_date", models.DateTimeField(auto_now_add=True)),
                ("update_date", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Investment Amount Per Year",
                "verbose_name_plural": "Investment Amount Per Year",
                "db_table": "investment_amount_per_year",
            },
        ),
        migrations.CreateModel(
            name="MaritalStatus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("status", models.CharField(max_length=50, unique=True)),
                ("add_date", models.DateTimeField(auto_now_add=True)),
                ("update_date", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Marital Status",
                "verbose_name_plural": "Marital Status",
                "db_table": "marital_status",
            },
        ),
        migrations.CreateModel(
            name="MonthlySavingCapacity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("saving_category", models.CharField(max_length=100, unique=True)),
                ("add_date", models.DateTimeField(auto_now_add=True)),
                ("update_date", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Monthly Saving Capacity",
                "verbose_name_plural": "Monthly Saving Capacity",
                "db_table": "monthly_saving_capacity",
            },
        ),
        migrations.CreateModel(
            name="MutualFund",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("scheme_name", models.CharField(max_length=255, unique=True)),
                ("q_param", models.CharField(max_length=100)),
                (
                    "net_asset_value",
                    models.DecimalField(decimal_places=4, default=0.0, max_digits=10),
                ),
                ("date", models.DateField()),
                ("symbol", models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name="Occupation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("occupation", models.CharField(max_length=100, unique=True)),
                ("add_date", models.DateTimeField(auto_now_add=True)),
                ("update_date", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Occupation",
                "verbose_name_plural": "Occupation",
                "db_table": "occupation",
            },
        ),
        migrations.CreateModel(
            name="Question",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("question", models.CharField(max_length=500)),
                ("add_date", models.DateTimeField(auto_now_add=True)),
                ("update_date", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Question",
                "verbose_name_plural": "Question",
                "db_table": "question",
            },
        ),
        migrations.CreateModel(
            name="Section",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("section_name", models.CharField(max_length=100)),
                ("add_date", models.DateTimeField(auto_now_add=True)),
                ("update_date", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Section",
                "verbose_name_plural": "Section",
                "db_table": "section",
            },
        ),
        migrations.CreateModel(
            name="FundOverview",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("category", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "fund_family",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "net_assets",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "ytd_return",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "yield_value",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "morningstar_rating",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("inception_date", models.DateField(blank=True, null=True)),
                (
                    "fund",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="overview",
                        to="ai_mf_backend.mutualfund",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FundData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "min_initial_investment",
                    models.DecimalField(
                        decimal_places=2, default=0.0, max_digits=10, null=True
                    ),
                ),
                (
                    "min_subsequent_investment",
                    models.DecimalField(
                        decimal_places=2, default=0.0, max_digits=10, null=True
                    ),
                ),
                (
                    "fund",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="fund_data",
                        to="ai_mf_backend.mutualfund",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AnnualReturn",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("year", models.IntegerField()),
                (
                    "fund_return",
                    models.DecimalField(
                        decimal_places=2, default=0.0, max_digits=5, null=True
                    ),
                ),
                (
                    "category_return",
                    models.DecimalField(
                        decimal_places=2, default=0.0, max_digits=5, null=True
                    ),
                ),
                (
                    "fund",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="annual_returns",
                        to="ai_mf_backend.mutualfund",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PerformanceData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "morningstar_return_rating",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                (
                    "ytd_return",
                    models.DecimalField(
                        decimal_places=2, default=0.0, max_digits=5, null=True
                    ),
                ),
                (
                    "average_return_5y",
                    models.DecimalField(
                        decimal_places=2, default=0.0, max_digits=5, null=True
                    ),
                ),
                ("number_of_years_up", models.IntegerField(default=0, null=True)),
                ("number_of_years_down", models.IntegerField(default=0, null=True)),
                (
                    "best_1y_total_return",
                    models.DecimalField(
                        decimal_places=2, default=0.0, max_digits=5, null=True
                    ),
                ),
                (
                    "worst_1y_total_return",
                    models.DecimalField(
                        decimal_places=2, default=0.0, max_digits=5, null=True
                    ),
                ),
                (
                    "best_3y_total_return",
                    models.DecimalField(
                        decimal_places=2, default=0.0, max_digits=5, null=True
                    ),
                ),
                (
                    "worst_3y_total_return",
                    models.DecimalField(
                        decimal_places=2, default=0.0, max_digits=5, null=True
                    ),
                ),
                (
                    "fund",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="performance_data",
                        to="ai_mf_backend.mutualfund",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ConditionalQuestion",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("visibility", models.CharField(max_length=50)),
                ("add_date", models.DateTimeField(auto_now_add=True)),
                ("update_date", models.DateTimeField(auto_now=True)),
                (
                    "condition",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ai_mf_backend.allowed_response",
                    ),
                ),
                (
                    "dependent_question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="dependent_question",
                        to="ai_mf_backend.question",
                    ),
                ),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="main_question",
                        to="ai_mf_backend.question",
                    ),
                ),
            ],
            options={
                "verbose_name": "Conditional Question",
                "verbose_name_plural": "Conditional Question",
                "db_table": "conditional_question",
            },
        ),
        migrations.AddField(
            model_name="allowed_response",
            name="question",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="ai_mf_backend.question"
            ),
        ),
        migrations.AddField(
            model_name="question",
            name="section",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="ai_mf_backend.section"
            ),
        ),
        migrations.AddField(
            model_name="allowed_response",
            name="section",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="ai_mf_backend.section"
            ),
        ),
        migrations.CreateModel(
            name="TrailingReturn",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("metric", models.CharField(max_length=50)),
                (
                    "fund_return",
                    models.DecimalField(
                        decimal_places=2, default=0.0, max_digits=5, null=True
                    ),
                ),
                (
                    "benchmark_return",
                    models.DecimalField(
                        decimal_places=2, default=0.0, max_digits=5, null=True
                    ),
                ),
                (
                    "fund",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="trailing_returns",
                        to="ai_mf_backend.mutualfund",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserContactInfo",
            fields=[
                ("user_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, null=True, unique=True
                    ),
                ),
                (
                    "mobile_number",
                    models.CharField(
                        blank=True,
                        null=True,
                        unique=True,
                        validators=[
                            ai_mf_backend.models.v1.database.user.validate_mobile_number
                        ],
                    ),
                ),
                ("password", models.CharField(blank=True, max_length=100, null=True)),
                ("is_verified", models.BooleanField(default=False)),
                ("add_date", models.DateTimeField(auto_now_add=True)),
                ("update_date", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "User Contact Info",
                "verbose_name_plural": "User Contact Info",
                "db_table": "user_contact_info",
                "indexes": [
                    models.Index(fields=["email"], name="user_contac_email_f59fcd_idx"),
                    models.Index(
                        fields=["mobile_number"], name="user_contac_mobile__5846b8_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="OTPlogs",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("otp", models.IntegerField(blank=True, null=True)),
                ("otp_valid", models.DateTimeField(blank=True, null=True)),
                ("add_date", models.DateTimeField(auto_now_add=True)),
                ("update_date", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ai_mf_backend.usercontactinfo",
                    ),
                ),
            ],
            options={
                "verbose_name": "OTP Logs",
                "verbose_name_plural": "OTP Logs",
                "db_table": "otp_logs",
            },
        ),
        migrations.CreateModel(
            name="UserFinancialDetails",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "regular_source_of_income",
                    models.BooleanField(
                        blank=True,
                        choices=[(True, "Yes"), (False, "No")],
                        default=False,
                        null=True,
                    ),
                ),
                (
                    "lock_in_period_accepted",
                    models.BooleanField(
                        blank=True,
                        choices=[(True, "Yes"), (False, "No")],
                        default=False,
                        null=True,
                    ),
                ),
                (
                    "investment_style",
                    models.CharField(
                        blank=True,
                        choices=[("SIP", "SIP"), ("Lump-Sum", "Lump-Sum")],
                        default="SIP",
                        max_length=10,
                        null=True,
                    ),
                ),
                ("add_date", models.DateTimeField(auto_now_add=True)),
                ("update_date", models.DateTimeField(auto_now=True)),
                (
                    "annual_income",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="ai_mf_backend.annualincome",
                    ),
                ),
                (
                    "investment_amount_per_year",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="ai_mf_backend.investmentamountperyear",
                    ),
                ),
                (
                    "monthly_saving_capacity",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="ai_mf_backend.monthlysavingcapacity",
                    ),
                ),
                (
                    "occupation",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="ai_mf_backend.occupation",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ai_mf_backend.usercontactinfo",
                    ),
                ),
            ],
            options={
                "verbose_name": "User Financial Detail",
                "verbose_name_plural": "User Financial Details",
                "db_table": "user_financial_details",
            },
        ),
        migrations.CreateModel(
            name="UserPersonalDetails",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=100, null=True)),
                ("date_of_birth", models.DateField(blank=True, null=True)),
                ("add_date", models.DateTimeField(auto_now_add=True)),
                ("update_date", models.DateTimeField(auto_now=True)),
                (
                    "gender",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="ai_mf_backend.gender",
                    ),
                ),
                (
                    "marital_status",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="ai_mf_backend.maritalstatus",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ai_mf_backend.usercontactinfo",
                    ),
                ),
            ],
            options={
                "db_table": "user_personal_details",
            },
        ),
        migrations.CreateModel(
            name="UserResponse",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("add_date", models.DateTimeField(auto_now_add=True)),
                ("update_date", models.DateTimeField(auto_now=True)),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ai_mf_backend.question",
                    ),
                ),
                (
                    "response",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ai_mf_backend.allowed_response",
                    ),
                ),
                (
                    "section",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ai_mf_backend.section",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ai_mf_backend.usercontactinfo",
                    ),
                ),
            ],
            options={
                "verbose_name": "User Response",
                "verbose_name_plural": "User Response",
                "db_table": "user_response",
            },
        ),
        migrations.CreateModel(
            name="HistoricalData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateTimeField()),
                (
                    "open",
                    models.DecimalField(decimal_places=4, default=0.0, max_digits=10),
                ),
                (
                    "high",
                    models.DecimalField(decimal_places=4, default=0.0, max_digits=10),
                ),
                (
                    "low",
                    models.DecimalField(decimal_places=4, default=0.0, max_digits=10),
                ),
                (
                    "close",
                    models.DecimalField(decimal_places=4, default=0.0, max_digits=10),
                ),
                (
                    "adj_close",
                    models.DecimalField(decimal_places=4, default=0.0, max_digits=10),
                ),
                ("volume", models.BigIntegerField(default=0)),
                (
                    "fund",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="historical_data",
                        to="ai_mf_backend.mutualfund",
                    ),
                ),
            ],
            options={
                "unique_together": {("fund", "date")},
            },
        ),
        migrations.CreateModel(
            name="RiskStatistics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("period", models.CharField(max_length=10)),
                (
                    "alpha",
                    models.DecimalField(
                        decimal_places=2, default=0.0, max_digits=5, null=True
                    ),
                ),
                (
                    "beta",
                    models.DecimalField(
                        decimal_places=2, default=0.0, max_digits=5, null=True
                    ),
                ),
                (
                    "mean_annual_return",
                    models.DecimalField(
                        decimal_places=2, default=0.0, max_digits=5, null=True
                    ),
                ),
                (
                    "r_squared",
                    models.DecimalField(
                        decimal_places=2, default=0.0, max_digits=5, null=True
                    ),
                ),
                (
                    "standard_deviation",
                    models.DecimalField(
                        decimal_places=2, default=0.0, max_digits=5, null=True
                    ),
                ),
                (
                    "sharpe_ratio",
                    models.DecimalField(
                        decimal_places=2, default=0.0, max_digits=5, null=True
                    ),
                ),
                (
                    "treynor_ratio",
                    models.DecimalField(
                        decimal_places=2, default=0.0, max_digits=5, null=True
                    ),
                ),
                (
                    "fund",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="risk_statistics",
                        to="ai_mf_backend.mutualfund",
                    ),
                ),
            ],
            options={
                "unique_together": {("fund", "period")},
            },
        ),
        migrations.CreateModel(
            name="UserLogs",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ip_details", models.JSONField()),
                ("device_type", models.CharField(max_length=100)),
                ("last_access", models.DateTimeField()),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("login", "Logged In"),
                            ("logged_out", "Logged Out"),
                            ("signup", "Signed Up"),
                            ("invalid", "invalid_action"),
                        ],
                        default="invalid",
                        max_length=10,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ai_mf_backend.usercontactinfo",
                    ),
                ),
            ],
            options={
                "verbose_name": "User Logs",
                "verbose_name_plural": "User Logs",
                "db_table": "user_logs",
                "indexes": [
                    models.Index(fields=["user"], name="user_logs_user_id_2c9228_idx")
                ],
            },
        ),
    ]
