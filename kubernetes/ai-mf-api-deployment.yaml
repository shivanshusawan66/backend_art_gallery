---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-mf-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ai-mf-api
  template:
    metadata:
      labels:
        app: ai-mf-api
    spec:
      containers:
      - name: ai-mf-api
        image: avisoft/ai-mf-backend:latest
        imagePullPolicy: Always
        workingDir: /AIMFBackend
        command: ["gunicorn", "-k", "uvicorn.workers.UvicornWorker", "--bind", "0.0.0.0:8000", "--workers", "$(APPLICATION_WORKERS)", "--threads", "$(APPLICATION_THREADS)", "ai_mf_backend.fastapi_application", "--timeout", "400", "--log-level=$(LOG_LEVEL)"]
        ports:
        - containerPort: 8000
        envFrom:
        - configMapRef:
            name: ai-mf-config
        resources:
          requests:
            # cpu: 4000m
            memory: 2Gi
          limits:
            # cpu: 8000m
            memory: 6Gi
        volumeMounts:
        - name: datafiles
          mountPath: /AIMFBackend/ai_mf_backend/datafiles
      volumes:
      - name: datafiles
        emptyDir: {}  # For demonstration. Consider using a PersistentVolume in production.
---
   apiVersion: v1
   kind: Service
   metadata:
     name: ai-mf-backend-api-service
   spec:
     selector:
       app: ai-mf-api
     ports:
       - protocol: TCP
         port: 8000
         targetPort: 8000
     type: NodePort  # Changed from LoadBalancer to NodePort
